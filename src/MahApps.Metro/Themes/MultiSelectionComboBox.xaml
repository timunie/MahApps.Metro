<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls"
                    xmlns:mahConverter="clr-namespace:MahApps.Metro.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!--#region DataTemplates-->
    <DataTemplate x:Key="MahApps.DataTemplates.MultiSelectionComboBox.Removeable">
        <Grid>
            <Border Margin="2"
                    Background="{DynamicResource MahApps.Brushes.Gray8}"
                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Converter={mahConverter:SizeToCornerRadiusConverter}}"
                    IsHitTestVisible="False" />
            <DockPanel Margin="7,2,2,2" LastChildFill="True">
                <Button Width="10"
                        Height="10"
                        Margin="5,2,2,2"
                        VerticalAlignment="Center"
                        mah:ControlsHelper.CornerRadius="5"
                        Command="mah:MultiSelectionComboBox.RemoveItemCommand"
                        CommandParameter="{Binding}"
                        DockPanel.Dock="Right"
                        IsHitTestVisible="True">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MahApps.Styles.Button.Chromeless}" TargetType="Button">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Path Data="M10,1.6c-4.639,0-8.4,3.761-8.4,8.4c0,4.639,3.761,8.4,8.4,8.4s8.4-3.761,8.4-8.4C18.4,5.361,14.639,1.6,10,1.6z   M14.789,13.061l-1.729,1.729L10,11.729l-3.061,3.06l-1.729-1.729L8.272,10L5.211,6.939L6.94,5.211L10,8.271l3.061-3.061  l1.729,1.729L11.728,10L14.789,13.061z"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                          Stretch="Uniform" />
                </Button>
                <ContentControl Margin="0"
                                VerticalAlignment="Center"
                                Content="{Binding}"
                                IsHitTestVisible="False" />
            </DockPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MahApps.DataTemplates.MultiSelectionComboBox.CheckBox">
        <CheckBox mah:CheckBoxHelper.CheckBackgroundFillChecked="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillCheckedDisabled="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillCheckedMouseOver="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillCheckedPressed="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillIndeterminate="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillIndeterminateDisabled="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillIndeterminateMouseOver="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillIndeterminatePressed="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillUnchecked="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.CheckBackgroundFillUncheckedPressed="{DynamicResource MahApps.Brushes.ThemeBackground}"
                  mah:CheckBoxHelper.ForegroundChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundCheckedDisabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundCheckedMouseOver="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundCheckedPressed="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundIndeterminate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundIndeterminateDisabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundIndeterminateMouseOver="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundIndeterminatePressed="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundUnchecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundUncheckedDisabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundUncheckedMouseOver="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  mah:CheckBoxHelper.ForegroundUncheckedPressed="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  Content="{Binding}"
                  Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=Foreground}"
                  IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected, Mode=TwoWay}" />
    </DataTemplate>

    <!--#endregion-->

    <Style x:Key="MahApps.Styles.TextBox.MultiSelectionComboBox.Editable"
           BasedOn="{StaticResource MahApps.Styles.TextBox}"
           TargetType="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid x:Name="PART_InnerGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Margin="0"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                          BorderThickness="0"
                                          IsTabStop="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="4,0"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                       Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                       TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                       TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                       Visibility="Collapsed" />

                            <ContentControl x:Name="PART_FloatingMessageContainer"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="4,0"
                                            Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{mahConverter:MathMultiplyConverter}">
                                        <Binding ElementName="PART_FloatingMessage"
                                                 Mode="OneWay"
                                                 Path="ActualHeight" />
                                        <Binding ElementName="PART_FloatingMessageContainer"
                                                 Mode="OneWay"
                                                 Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock x:Name="PART_FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                           Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                           TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                           TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{mahConverter:MathSubtractConverter}">
                                                    <Binding ElementName="PART_FloatingMessage"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                    <Binding ElementName="PART_FloatingMessageContainer"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>

                            <Button x:Name="PART_ClearText"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                    mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="False"
                                    Command="{TemplateBinding mah:TextBoxHelper.ButtonCommand}"
                                    CommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}"
                                    Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                    ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                    Focusable="False"
                                    FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                    FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ClearTextButton)}" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ClearText" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MahApps.Styles.ToggleButton.MultiSelectionComboBox.DropDown"
           BasedOn="{StaticResource MahApps.Styles.ToggleButton.ComboBoxDropDown}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="ToggleButtonRootGrid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="TextColumn" Width="*" />
                            <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            <ColumnDefinition x:Name="ToggleButtonColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PART_ClearText"
                                Grid.Column="1"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MultiSelectionComboBox}}, Path=(mah:TextBoxHelper.ClearTextButton), Mode=OneWay}"
                                Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MultiSelectionComboBox}}, Path=(mah:TextBoxHelper.ClearTextButton), Converter={StaticResource BooleanToVisibilityConverter}}" />

                        <Grid x:Name="BtnArrowBackground"
                              Grid.Column="2"
                              Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                              Background="Transparent">
                            <Path x:Name="Arrow"
                                  Width="8"
                                  Height="4"
                                  HorizontalAlignment="Center"
                                  Data="{DynamicResource ComboBoxDownArrowGeometry}"
                                  Fill="{DynamicResource MahApps.Brushes.Gray1}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Stretch="Uniform" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                            <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                        </DataTrigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                            <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MahApps.Styles.MultiSelectionComboBox" TargetType="{x:Type mah:MultiSelectionComboBox}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.Border.Focus}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.Border.MouseOver}" />
        <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="IsDropDownOpen" Value="False" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SelectedItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="2,0"
                            Padding="5,0"
                            Background="{DynamicResource MahApps.Brushes.Gray8}"
                            CornerRadius="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Converter={mahConverter:SizeToCornerRadiusConverter}}">
                        <ContentPresenter Content="{Binding}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DisabledPopupOverlayContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <Border.Background>
                            <SolidColorBrush Opacity="0.5" Color="{DynamicResource MahApps.Colors.ThemeForeground}" />
                        </Border.Background>
                        <DockPanel LastChildFill="True">
                            <Button VerticalAlignment="Bottom"
                                    Command="mah:MultiSelectionComboBox.ClearContentCommand"
                                    Content="Reset Text"
                                    DockPanel.Dock="Bottom" />
                            <Path Margin="50"
                                  Data="M12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm0,18a8,8,0,0,1-8-8A7.92,7.92,0,0,1,5.69,7.1L16.9,18.31A7.92,7.92,0,0,1,12,20Zm6.31-3.1L7.1,5.69A7.92,7.92,0,0,1,12,4a8,8,0,0,1,8,8A7.92,7.92,0,0,1,18.31,16.9Z"
                                  Fill="{DynamicResource MahApps.Brushes.Gray}"
                                  Stretch="Uniform" />
                        </DockPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedItemsPanelTemplate">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel VerticalAlignment="Center" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mah:MultiSelectionComboBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                <ColumnDefinition x:Name="ToggleButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ToggleButton x:Name="PART_DropDownToggle"
                                          Grid.RowSpan="2"
                                          Grid.ColumnSpan="3"
                                          Margin="0"
                                          VerticalAlignment="Stretch"
                                          mah:ControlsHelper.CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                          mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                          mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                          mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                          mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                          mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                          mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          KeyboardNavigation.IsTabStop="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Style="{DynamicResource MahApps.Styles.ToggleButton.MultiSelectionComboBox.DropDown}" />

                            <Grid x:Name="ContentSite"
                                  Grid.Row="1"
                                  Grid.Column="0"
                                  Margin="1,0">
                                <ScrollViewer x:Name="PART_SelectedItemsScrollViewer"
                                              Padding="{TemplateBinding Padding}"
                                              mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer), Mode=OneWay}"
                                              mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled), Mode=OneWay}"
                                              mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide), Mode=OneWay}"
                                              HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                              VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
                                    <ItemsControl ItemContainerStyle="{TemplateBinding SelectedItemContainerStyle}"
                                                  ItemContainerStyleSelector="{TemplateBinding SelectedItemContainerStyleSelector}"
                                                  ItemTemplate="{TemplateBinding SelectedItemTemplate}"
                                                  ItemTemplateSelector="{TemplateBinding SelectedItemTemplateSelector}"
                                                  ItemsSource="{TemplateBinding DisplaySelectedItems}"
                                                  ItemsPanel="{TemplateBinding SelectedItemsPanelTemplate}" />
                                </ScrollViewer>
                            </Grid>

                            <TextBox x:Name="PART_EditableTextBox"
                                     Grid.Row="1"
                                     Grid.Column="0"
                                     Margin="0"
                                     Padding="{TemplateBinding Padding}"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                     mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                     mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                     mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                     mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                     mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}"
                                     mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}"
                                     mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                     mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                     mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                     AcceptsReturn="{TemplateBinding AcceptsReturn}"
                                     Background="{x:Null}"
                                     BorderThickness="0"
                                     CharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ComboBoxHelper.CharacterCasing), Mode=OneWay}"
                                     Focusable="True"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Foreground="{TemplateBinding Foreground}"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     MaxLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ComboBoxHelper.MaxLength), Mode=OneWay}"
                                     ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                     ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                     Style="{DynamicResource MahApps.Styles.TextBox.MultiSelectionComboBox.Editable}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     Visibility="Collapsed" />

                            <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="4,0"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                       Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                       TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                       TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                       Visibility="Collapsed" />

                            <ContentControl x:Name="PART_FloatingMessageContainer"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="4,0"
                                            Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{mahConverter:MathMultiplyConverter}">
                                        <Binding ElementName="PART_FloatingMessage"
                                                 Mode="OneWay"
                                                 Path="ActualHeight" />
                                        <Binding ElementName="PART_FloatingMessageContainer"
                                                 Mode="OneWay"
                                                 Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock x:Name="PART_FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                           Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                           TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                           TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{mahConverter:MathSubtractConverter}">
                                                    <Binding ElementName="PART_FloatingMessage"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                    <Binding ElementName="PART_FloatingMessageContainer"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>
                        </Grid>

                        <Border x:Name="DisabledVisualElement"
                                Grid.ColumnSpan="3"
                                Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0.6"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />

                        <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_DropDownToggle}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder"
                                        Height="200"
                                        HorizontalAlignment="Stretch"
                                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                        BorderBrush="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}"
                                        BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid>
                                        <ListBox x:Name="PART_PopupListBox"
                                                 AlternationCount="{TemplateBinding AlternationCount}"
                                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                                 ItemStringFormat="{TemplateBinding ItemStringFormat}"
                                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                                 ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                 ItemsSource="{TemplateBinding ItemsSource}"
                                                 SelectedIndex="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}"
                                                 SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedItem, Mode=TwoWay}"
                                                 SelectedValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedValue, Mode=TwoWay}"
                                                 SelectedValuePath="{TemplateBinding SelectedValuePath}"
                                                 SelectionMode="{TemplateBinding SelectionMode}"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ContentControl x:Name="PART_PopupOverlay"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch"
                                                        Content="{TemplateBinding DisabledPopupOverlayContent}"
                                                        ContentTemplate="{TemplateBinding DisabledPopupOverlayContentTemplate}"
                                                        Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextMenu, Converter={x:Static mahConverter:IsNullConverter.Instance}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EditableTextBox" Property="ContextMenu" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mahConverter:IsNullConverter.Instance}}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mahConverter:IsNullConverter.Instance}}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mahConverter:IsNullConverter.Instance}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ClearTextButton)}" Value="False">
                            <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_EditableTextBox" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="{x:Null}" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray9}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>

                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="HasCustomText" Value="True">
                            <Setter TargetName="PART_PopupOverlay" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_PopupListBox" Property="IsEnabled" Value="False" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"
                                                    IsVirtualizing="True"
                                                    IsVirtualizingWhenGrouping="True"
                                                    VirtualizationMode="Recycling" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="mah:MultiSelectionComboBox" BasedOn="{StaticResource MahApps.Styles.MultiSelectionComboBox}" x:Key="MahApps.Styles.MultiSelectionComboBox.Horizontal">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled" Value="True"/>
        <Setter Property="SelectedItemsPanelTemplate" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>